{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/Form.module.css","components/AppBar/Header.js","components/AppBar/AppBar.js","components/Container/Container.js","components/Layout/Layout.js","components/Title/Title.js","redux/phonebook-actions.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Header","text","defaultProps","AppBar","className","Container","children","Layout","Title","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","nameInputId","phoneInputId","style","this","htmlFor","type","onChange","button","Component","connect","dispatch","object","phonebookActions","Filter","getVisibleFilter","allItems","filter","normalizedFilter","toLowerCase","includes","length","contacts","items","target","Contact","onDeliteContact","btn","onClick","getVisibleContact","filteredContact","list","contactsContainer","contactsList","map","contactItem","itemReducer","createReducer","contactActions","item","filterReduser","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1dca0e7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"Contacts_contactsContainer__14ltp\",\"contactsList\":\"Contacts_contactsList__1Wnes\",\"contactItem\":\"Contacts_contactItem__3ahLt\",\"btn\":\"Contacts_btn__th1yf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3kBlv\",\"button\":\"Form_button__2kBwB\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ text }) => (\n  <div>\n    <h1>{text}</h1>\n  </div>\n);\n\nHeader.defaultProps = {\n  text: '',\n};\n\nHeader.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Header;\n","import React from 'react';\nimport './AppBar.css';\nimport Header from './Header';\n\nconst AppBar = ({ text }) => (\n  <header className=\"AppBar\">\n    <Header text={text} />\n  </header>\n);\n\nexport default AppBar;\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport AppBar from '../AppBar';\nimport Container from '../Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <AppBar text=\"React. Redux. HomeWork-5. PhoneBook.\" />\n    <Container>{children}</Container>\n  </>\n);\n\nexport default Layout;\n","import React from 'react';\nimport './Title.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ text }) => {\n  return <h2 className=\"Title\">{text}</h2>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add', ({ name, number }) => ({\n  payload: { id: uuidv4(), name, number },\n}));\nconst deleteContact = createAction('contact/delete');\nconst changeFilter = createAction('contact/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport style from './Form.module.css';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name) {\n      this.props.onSubmit(this.state);\n      this.reset();\n      return;\n    } else alert('Please enter Name');\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  nameInputId = uuidv4();\n  phoneInputId = uuidv4();\n\n  render() {\n    return (\n      <>\n        <form className={style.Form} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              id={this.nameInputId}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={this.phoneInputId}>\n            Phone:\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              id={this.phoneInputId}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={style.button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: object => dispatch(phonebookActions.addContact(object)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className=\"Filter\">\n      Find contact by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst getVisibleFilter = (allItems, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContact = allItems.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n  return filteredContact.length ? filter : '';\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  return { value: getVisibleFilter(items, filter) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport style from './Contacts.module.css';\nimport PropTypes from 'prop-types';\n\nconst Contact = ({ name, number, onDeliteContact }) => {\n  return (\n    <>\n      {name}: {number}\n      <button type=\"button\" className={style.btn} onClick={onDeliteContact}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeliteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport style from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\nimport phonebookActions from '../../redux/phonebook-actions';\n\nconst Contacts = ({ list, onDeliteContact }) => {\n  return (\n    <div className={style.contactsContainer}>\n      <ul className={style.contactsList}>\n        {list.length > 0 &&\n          list.map(({ id, name, number }) => (\n            <li key={id} className={style.contactItem}>\n              <Contact\n                name={name}\n                number={number}\n                onDeliteContact={() => onDeliteContact(id)}\n              />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  list: PropTypes.array.isRequired,\n  onDeliteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContact = (allItems, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContact = allItems.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n  return filteredContact.length ? filteredContact : allItems;\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  return { list: getVisibleContact(items, filter) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeliteContact: id => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Layout from './components/Layout';\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nconst App = ({ contacts }) => {\n  return (\n    <Layout>\n      <Title text={'Phonebook'} />\n      <Form />\n      {contacts.length > 0 && <Title text={'Contacts'} />}\n      {contacts.length > 1 && <Filter />}\n      <Contacts />\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactActions from './phonebook-actions';\n\nconst itemReducer = createReducer([], {\n  [contactActions.addContact]: (state, { payload }) => {\n    const checkDublicat = state.filter(item => payload.name === item.name);\n    if (checkDublicat.length) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [...state, payload];\n  },\n  [contactActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReduser = createReducer('', {\n  [contactActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReduser,\n});\n\nexport default contactsReducer;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactPersistConfig = {\n  key: 'contact',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: combineReducers({\n    contacts: persistReducer(contactPersistConfig, contactsReducer),\n  }),\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}